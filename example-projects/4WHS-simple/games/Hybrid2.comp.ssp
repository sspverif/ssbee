composition Hybrid2 {
        const n: Integer;
        const zeron: Bits(256);
        const prf: fn Bits(256), Integer, Integer, Bits(256), Bits(256), Bool ->  Bits(256);
        const mac: fn Bits(256), Bits(256), Integer -> Bits(256);
        const b: Bool;
        const bprf: Bool;

    instance Prf = PRF {
	    params {
            b: bprf,
		    prf: prf,
		    n: n,
		}
    }

    instance Prot = Prot_NoPrf {
        params {
        n: n,
        zeron: zeron,
        prf: prf,
        mac: mac,
        }
    }
    instance KX = KX_NoPrf {
        params {
        b: b,
        n: n,
        zeron: zeron,
        }
    }

    compose {
        adversary: {
            NewKey:     Prf,
            NewSession: KX,
            Send1:      KX,
            Send2:      KX,
            Send3:      KX,
            Send4:      KX,
            Send5:      KX,
            Reveal:     KX,
            Test:       KX,
       },

        KX: {
            Run1:      Prot,
            Run2:      Prot,
            Run3:      Prot,
            Run4:      Prot,
            Run5:      Prot,
            Hon:       Prf,
            Eval:      Prf,
        },
        Prot: {
            Eval: Prf,
        }
    }
}
