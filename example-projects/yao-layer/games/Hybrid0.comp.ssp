composition Hybrid0 {
    const n: Integer;
    const m: Integer;
    const p: Integer;
    const zeron: Bits(n);
    const zerom: Bits(m);
    const encn: fn Bits(n),Bits(n),Bits(n) -> Bits(m);
    const encm: fn Bits(n),Bits(m),Bits(n) -> Bits(p);

    instance keys0 = Keys {
        params {
            n: n,
        }
    }

    instance keys1 = Keys {
        params {
            n: n,
        }
    }

    instance keys2 = Keys {
        params {
            n: n,
        }
    }

    instance keys3 = Keys {
        params {
            n: n,
        }
    }

    instance gate1 = Gate {
        params {
            n: n,
            m: m,
            p: p,
            h: 0,
            zeron: zeron,
        }
    }

    instance enc1 = Enc0 {
        params {
            n: n,
            m: m,
            p: p,
            encn: encn,
            encm: encm,
        }
    }

    instance gate2 = Gate {
        params {
            n: n,
            m: m,
            p: p,
            h: 0,
            zeron: zeron,
        }
    }

    instance enc2 = Enc0 {
        params {
            n: n,
            m: m,
            p: p,
            encn: encn,
            encm: encm,
        }
    }

    instance gate3 = Gate {
        params {
            n: n,
            m: m,
            p: p,
            h: 0,
            zeron: zeron,
        }
    }

    instance enc3 = Enc0 {
        params {
            n: n,
            m: m,
            p: p,
            encn: encn,
            encm: encm,
        }
    }

    compose {
        adversary: {
            GETAOUT: keys0,
            SETBIT: keys0,
            GBLG: gate1,
            GBLG: gate2,
            GBLG: gate3,
            GETKEYSIN: keys3,
        }
        gate1: {
            ENCN: enc1,
            ENCM: enc1,
            GETKEYSOUT: keys1,
        }
        enc1: {
            GETKEYSIN: keys0,
        }
        gate2: {
            ENCN: enc2,
            ENCM: enc2,
            GETKEYSOUT: keys2,
        }
        enc2: {
            GETKEYSIN: keys1,
        }
        gate3: {
            ENCN: enc3,
            ENCM: enc3,
            GETKEYSOUT: keys3,
        }
        enc3: {
            GETKEYSIN: keys2,
        }
    }
}
